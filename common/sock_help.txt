##################################################################
# sock_help.h - Network programming library                      #
##################################################################
# info: Creates a socket application using winsock (Windows) or  #
# Socket API (Linux). Helps you create a server or client app-   #
# lication in an easy way. This is just a wrapper, for socket    #
# application initialization, also has a few special functions   #
# to help with some repeditive stuff like sending quick messages #
# and transfering of files. To accept connections to close       #
# connections. More may be added later depending on if something #
# should be needed later on. This is one of the many libraries,  #
# that I have made for my S.A.B. project.                        #
##################################################################
# Created by Philip '5n4k3' Simonson             (2017)          #
##################################################################

In Windows SOCKET is defined as (unsigned int), you can check
in my sock_help wrapper for a bad socket with BAD_SOCKET.

##################################################################
#  create_server()                                               #
##################################################################
# info: The parameter for this function are...                   #
#       1. (int) nonblocking = 0 or 1 (can be true or false)     #
#       2. (int) port = 5000 (can be anything up to 65535)       #
#       3. (const char *) address = "0.0.0.0" (all available)    #
#              or "127.0.0.1" (local host loopback)              #
##################################################################
# returns: socket file descriptor                                #
##################################################################

# related to Windows
SOCKET create_server(int, int, const char *);

# related Linux
int create_server(int, int, const char *);

##################################################################
#  create_client()                                               #
##################################################################
# info: The parameter for this function are...                   #
#       1. (int) nonblocking = 0 or 1 (can be true or false)     #
#       2. (int) port = 5000 (can be anything up to 65535)       #
#       3. (const char *) address = "0.0.0.0" (all available)    #
#              or "127.0.0.1" (local host loopback)              #
##################################################################
# returns: socket file descriptor                                #
##################################################################

# related to Windows - creating a client 
SOCKET create_client(int, int, const char *);

# related to Linux - creating a client
int create_client(int, int, const char *);

##################################################################
#  close_conn()                                                  #
##################################################################
# info: The only parameter for close_conn() is, the socket file  #
#       descriptor. This function is for Windows and Linux.      #
##################################################################
# returns: void (eg nothing)                                     #
##################################################################

# related to Windows
void close_conn(SOCKET)

# related to Linux
void close_conn(int)

##################################################################
#                       .:[ END OF FILE ]:.                      #
##################################################################
